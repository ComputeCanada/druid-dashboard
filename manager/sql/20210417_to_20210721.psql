CREATE TABLE reportables (
  id SERIAL PRIMARY KEY,
  epoch INTEGER NOT NULL,
  ticks INTEGER NOT NULL DEFAULT 1,
  cluster VARCHAR(16) NOT NULL,
  claimant CHAR(7),
  ticket_id INTEGER,
  ticket_no VARCHAR(9),
  summary TEXT,
  FOREIGN KEY (cluster) REFERENCES clusters(id)
);

CREATE TABLE oldjobs (
  id INTEGER PRIMARY KEY,
  account VARCHAR(32) NOT NULL,
  submitter VARCHAR(32) NOT NULL,
  resource CHAR(1) NOT NULL DEFAULT 'c',
  age INTEGER NOT NULL,
  FOREIGN KEY (id) REFERENCES reportables(id)
);

CREATE TABLE history (
  id SERIAL PRIMARY KEY,
  case_id INTEGER NOT NULL,
  analyst CHAR(7),
  timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  note TEXT,
  change TEXT,
  FOREIGN KEY (case_id) REFERENCES reportables(id)
);

ALTER TABLE bursts RENAME TO bursts_old;
CREATE TABLE bursts (
  id INTEGER PRIMARY KEY,
  state CHAR(1) NOT NULL DEFAULT 'p',
  account VARCHAR(32) NOT NULL,
  resource CHAR(1) NOT NULL DEFAULT 'c',
  pain REAL NOT NULL,
  firstjob INTEGER NOT NULL,
  lastjob INTEGER NOT NULL,
  submitters TEXT NOT NULL,
  CHECK (state in ('p', 'a', 'r')),
  CHECK (resource in ('c', 'g')),
  FOREIGN KEY (id) REFERENCES reportables(id)
);
INSERT INTO reportables (id, epoch, ticks, cluster, claimant, ticket_id, ticket_no, summary) (
  SELECT id, epoch, ticks, cluster, claimant, ticket_id, ticket_no, summary FROM bursts_old
);
INSERT INTO bursts (id, state, account, resource, pain, firstjob, lastjob, submitters) (
  SELECT id, state, account, resource, pain, firstjob, lastjob, submitters FROM bursts_old
);
SELECT setval('reportables_id_seq'::regclass, (SELECT last_value FROM bursts_id_seq));

-- migrate from separate notes/updates tables to unified history table
INSERT into history (case_id, analyst, timestamp, note) (
  SELECT burst_id, analyst, timestamp, note FROM notes
);
INSERT INTO history (case_id, analyst, timestamp, note, change) (
  SELECT burst_id, analyst, timestamp, note, FORMAT('{"datum":"state","was":"%s","now":"%s"}', old_state, new_state) AS change FROM updates_state
);
INSERT INTO history (case_id, analyst, timestamp, note, change) (
  SELECT burst_id, analyst, timestamp, note, FORMAT('{"datum":"claimant","was":"%s","now":"%s"}', claimant_was, claimant_now) AS change FROM updates_claimant
);
DROP TABLE notes;
DROP TABLE updates_state;
DROP TABLE updates_claimant;
DROP TABLE bursts_old;

-- update schemalog
INSERT INTO schemalog (version, applied) VALUES ('20210721', CURRENT_TIMESTAMP);
